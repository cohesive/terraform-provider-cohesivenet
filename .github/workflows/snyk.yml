name: Snyk Security Scan

on:
  workflow_dispatch:
  push:
    branches:
    - "main"

jobs:
  snyk_scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.ref }} 
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9  

      - name: Set up Node.js (for Snyk)
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install Snyk
        run: npm install -g snyk

      - name: Run Snyk Security Scan
        run: snyk test --all-projects --json -d > snyk-results.json
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Print Snyk Results JSON
        run: cat snyk-results.json

      - name: Send Results to Slack
        run: |
          REPO_NAME="${{ github.repository }}"
          BRANCH_NAME="${{ github.event.ref }}"
      
          if [ -f snyk-results.json ]; then
            vulnerabilities=$(jq -r '[.vulnerabilities[]? | { 
              title: .title,
              package: .packageName, 
              version: .version, 
              severity: .severity, 
              description: (.identifiers.CVE // ["N/A"]) | join(", ")
            }]' snyk-results.json || echo "[]")
      
            if [ "$vulnerabilities" != "[]" ]; then
              slack_message=$(jq -n --argjson vulnerabilities "$vulnerabilities" --arg repo "$REPO_NAME" --arg branch "$BRANCH_NAME" '{
                text: ("*Snyk detected vulnerabilities in \($repo) [\($branch)]*\n" + 
                  ($vulnerabilities | map(
                    "*\(.title) (\(.package) v\(.version))*\nSeverity: \(.severity)\nDescription: \(.description)\n"
                  ) | join("\n----------------\n")))
              }')
            else
              slack_message=$(jq -n --arg repo "$REPO_NAME" --arg branch "$BRANCH_NAME" '{
                text: ("✅ No vulnerabilities found in \($repo) [\($branch)].")
              }')
            fi
          else
            slack_message=$(jq -n --arg repo "$REPO_NAME" --arg branch "$BRANCH_NAME" '{
              text: ("⚠️ Snyk results file not found in \($repo) [\($branch)].")
            }')
          fi
      
          curl -X POST -H "Content-type: application/json" --data "$slack_message" ${{ secrets.TEST_SLACK_WEBHOOK_URL }}
